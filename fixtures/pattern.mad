-- Prelude stuff
print :: a -> b
print = (a) => #- { console.log(a); return a; } -#


-- Actual code
data Maybe a = Just a | Nothing

p = Just("just")
s = Just(p)

where(s) {
  is Just k        : k
  is Just (Just x) : x
  is Just (Nothing): "1"
}

x = 3 == 5

where(x) {
  is True: "YOUHOU"
  is _   : "Not YOUHOU"
} |> print

w = { x: 4, name: "John" }
where(w) {
  is { name: x }: x
} |> print

data User = User String String Num
u = User("john", "smith", 32)

where(u) {
  is User _ n m: m + 48
} |> print


data R = R { x :: Num }
r = R({ x: 42 })
where(r) {
  is R { x: x }: x
} |> print


list = [1, 2, 3, 5, 8, 13, 21, 34]

where(list) {
  is [1, 2]: "OK"
  is [1, n]: n
  is []: "OK"
}

